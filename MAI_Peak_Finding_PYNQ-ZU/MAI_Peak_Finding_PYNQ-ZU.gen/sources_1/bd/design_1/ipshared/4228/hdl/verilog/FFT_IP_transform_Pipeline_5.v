// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module FFT_IP_transform_Pipeline_5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_x_M_value_9,
        p_x_M_value_10,
        p_x_M_value_2,
        p_x_M_value_1,
        p_n,
        agg_result_0_0_i_out,
        agg_result_0_0_i_out_ap_vld,
        agg_result_1_0_i_out,
        agg_result_1_0_i_out_ap_vld,
        grp_fu_467_p_din0,
        grp_fu_467_p_din1,
        grp_fu_467_p_opcode,
        grp_fu_467_p_dout0,
        grp_fu_467_p_ce,
        grp_fu_471_p_din0,
        grp_fu_471_p_din1,
        grp_fu_471_p_opcode,
        grp_fu_471_p_dout0,
        grp_fu_471_p_ce,
        grp_fu_475_p_din0,
        grp_fu_475_p_din1,
        grp_fu_475_p_dout0,
        grp_fu_475_p_ce,
        grp_fu_479_p_din0,
        grp_fu_479_p_din1,
        grp_fu_479_p_dout0,
        grp_fu_479_p_ce,
        grp_fu_483_p_din0,
        grp_fu_483_p_din1,
        grp_fu_483_p_dout0,
        grp_fu_483_p_ce,
        grp_fu_487_p_din0,
        grp_fu_487_p_din1,
        grp_fu_487_p_dout0,
        grp_fu_487_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 18'd1;
parameter    ap_ST_fsm_pp0_stage1 = 18'd2;
parameter    ap_ST_fsm_pp0_stage2 = 18'd4;
parameter    ap_ST_fsm_pp0_stage3 = 18'd8;
parameter    ap_ST_fsm_pp0_stage4 = 18'd16;
parameter    ap_ST_fsm_pp0_stage5 = 18'd32;
parameter    ap_ST_fsm_pp0_stage6 = 18'd64;
parameter    ap_ST_fsm_pp0_stage7 = 18'd128;
parameter    ap_ST_fsm_pp0_stage8 = 18'd256;
parameter    ap_ST_fsm_pp0_stage9 = 18'd512;
parameter    ap_ST_fsm_pp0_stage10 = 18'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 18'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 18'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 18'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 18'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 18'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 18'd65536;
parameter    ap_ST_fsm_pp0_stage17 = 18'd131072;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] p_x_M_value_9;
input  [31:0] p_x_M_value_10;
input  [31:0] p_x_M_value_2;
input  [31:0] p_x_M_value_1;
input  [11:0] p_n;
output  [31:0] agg_result_0_0_i_out;
output   agg_result_0_0_i_out_ap_vld;
output  [31:0] agg_result_1_0_i_out;
output   agg_result_1_0_i_out_ap_vld;
output  [31:0] grp_fu_467_p_din0;
output  [31:0] grp_fu_467_p_din1;
output  [0:0] grp_fu_467_p_opcode;
input  [31:0] grp_fu_467_p_dout0;
output   grp_fu_467_p_ce;
output  [31:0] grp_fu_471_p_din0;
output  [31:0] grp_fu_471_p_din1;
output  [0:0] grp_fu_471_p_opcode;
input  [31:0] grp_fu_471_p_dout0;
output   grp_fu_471_p_ce;
output  [31:0] grp_fu_475_p_din0;
output  [31:0] grp_fu_475_p_din1;
input  [31:0] grp_fu_475_p_dout0;
output   grp_fu_475_p_ce;
output  [31:0] grp_fu_479_p_din0;
output  [31:0] grp_fu_479_p_din1;
input  [31:0] grp_fu_479_p_dout0;
output   grp_fu_479_p_ce;
output  [31:0] grp_fu_483_p_din0;
output  [31:0] grp_fu_483_p_din1;
input  [31:0] grp_fu_483_p_dout0;
output   grp_fu_483_p_ce;
output  [31:0] grp_fu_487_p_din0;
output  [31:0] grp_fu_487_p_din1;
input  [31:0] grp_fu_487_p_dout0;
output   grp_fu_487_p_ce;

reg ap_idle;
reg agg_result_0_0_i_out_ap_vld;
reg agg_result_1_0_i_out_ap_vld;

(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_state18_pp0_stage17_iter0;
wire    ap_block_state36_pp0_stage17_iter1;
wire    ap_block_pp0_stage17_subdone;
reg   [0:0] icmp_ln990_reg_360;
reg    ap_condition_exit_pp0_iter0_stage17;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [31:0] reg_134;
wire    ap_block_pp0_stage17_11001;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_state17_pp0_stage16_iter0;
wire    ap_block_state35_pp0_stage16_iter1;
wire    ap_block_pp0_stage16_11001;
reg   [31:0] reg_140;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state19_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln990_fu_198_p2;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state20_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] tmp_reg_378;
reg   [0:0] tmp_reg_378_pp0_iter1_reg;
reg   [31:0] mul_ac_i_i1_i_reg_386;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state26_pp0_stage7_iter1;
wire    ap_block_pp0_stage7_11001;
reg   [31:0] mul_bd_i_i1_i_reg_391;
reg   [31:0] mul_ad_i_i1_i_reg_396;
reg   [31:0] p_y_M_value_load_reg_402;
reg   [31:0] p_y_M_value_9_load_reg_409;
reg   [31:0] mul_ac_i3_i1_i_reg_416;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state25_pp0_stage6_iter1;
wire    ap_block_pp0_stage6_11001;
reg   [31:0] mul_bd_i4_i1_i_reg_421;
reg   [31:0] mul_ad_i5_i1_i_reg_426;
reg   [31:0] mul_bc_i6_i1_i_reg_431;
reg    ap_enable_reg_pp0_iter0_reg;
reg   [11:0] p_n_assign_fu_38;
wire   [11:0] zext_ln990_fu_194_p1;
wire    ap_loop_init;
wire    ap_block_pp0_stage1;
reg   [31:0] p_t_fu_42;
reg   [31:0] p_t_2_fu_46;
reg   [31:0] p_y_M_value_fu_50;
wire   [31:0] p_y_M_value_15_fu_275_p3;
wire    ap_block_pp0_stage0;
reg   [31:0] p_y_M_value_9_fu_54;
wire   [31:0] p_y_M_value_14_fu_269_p3;
reg   [31:0] p_y_M_value_10_fu_58;
wire   [31:0] p_y_M_value_13_fu_262_p3;
wire    ap_block_pp0_stage17;
reg   [31:0] p_y_M_value_11_fu_62;
wire   [31:0] p_y_M_value_12_fu_255_p3;
wire    ap_block_pp0_stage17_01001;
reg   [31:0] grp_fu_110_p0;
reg   [31:0] grp_fu_110_p1;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
wire    ap_block_pp0_stage7;
reg   [31:0] grp_fu_114_p0;
reg   [31:0] grp_fu_114_p1;
reg   [31:0] grp_fu_118_p0;
reg   [31:0] grp_fu_118_p1;
reg   [31:0] grp_fu_122_p0;
reg   [31:0] grp_fu_122_p1;
reg   [31:0] grp_fu_126_p0;
reg   [31:0] grp_fu_126_p1;
wire   [10:0] p_n_assign_1_fu_184_p4;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_state27_pp0_stage8_iter1;
wire    ap_block_pp0_stage8_00001;
wire    ap_block_pp0_stage7_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [17:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state21_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state22_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state23_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state24_pp0_stage5_iter1;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_state28_pp0_stage9_iter1;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_state29_pp0_stage10_iter1;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_state30_pp0_stage11_iter1;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_state31_pp0_stage12_iter1;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_state14_pp0_stage13_iter0;
wire    ap_block_state32_pp0_stage13_iter1;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_state15_pp0_stage14_iter0;
wire    ap_block_state33_pp0_stage14_iter1;
wire    ap_block_pp0_stage14_subdone;
wire    ap_block_state16_pp0_stage15_iter0;
wire    ap_block_state34_pp0_stage15_iter1;
wire    ap_block_pp0_stage15_subdone;
wire    ap_block_pp0_stage16_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 18'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

FFT_IP_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage17),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage17_subdone) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage17)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage17_subdone) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        p_n_assign_fu_38 <= p_n;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln990_fu_198_p2 == 1'd0))) begin
        p_n_assign_fu_38 <= zext_ln990_fu_194_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_t_2_fu_46 <= p_x_M_value_2;
        end else if (((icmp_ln990_reg_360 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            p_t_2_fu_46 <= reg_134;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_t_fu_42 <= p_x_M_value_1;
        end else if (((icmp_ln990_reg_360 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            p_t_fu_42 <= reg_140;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        p_y_M_value_10_fu_58 <= p_x_M_value_10;
    end else if (((1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        p_y_M_value_10_fu_58 <= p_y_M_value_13_fu_262_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        p_y_M_value_11_fu_62 <= p_x_M_value_9;
    end else if (((1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        p_y_M_value_11_fu_62 <= p_y_M_value_12_fu_255_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        p_y_M_value_9_fu_54 <= p_x_M_value_10;
    end else if (((1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        p_y_M_value_9_fu_54 <= p_y_M_value_14_fu_269_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        p_y_M_value_fu_50 <= p_x_M_value_9;
    end else if (((1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        p_y_M_value_fu_50 <= p_y_M_value_15_fu_275_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln990_reg_360 <= icmp_ln990_fu_198_p2;
        tmp_reg_378_pp0_iter1_reg <= tmp_reg_378;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        mul_ac_i3_i1_i_reg_416 <= grp_fu_475_p_dout0;
        mul_ad_i5_i1_i_reg_426 <= grp_fu_483_p_dout0;
        mul_bd_i4_i1_i_reg_421 <= grp_fu_479_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln990_reg_360 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        mul_ac_i_i1_i_reg_386 <= grp_fu_475_p_dout0;
        mul_ad_i_i1_i_reg_396 <= grp_fu_483_p_dout0;
        mul_bd_i_i1_i_reg_391 <= grp_fu_479_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        mul_bc_i6_i1_i_reg_431 <= grp_fu_487_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln990_reg_360 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_y_M_value_9_load_reg_409 <= p_y_M_value_9_fu_54;
        p_y_M_value_load_reg_402 <= p_y_M_value_fu_50;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((icmp_ln990_reg_360 == 1'd0) & (1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)))) begin
        reg_134 <= grp_fu_467_p_dout0;
        reg_140 <= grp_fu_471_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln990_fu_198_p2 == 1'd0))) begin
        tmp_reg_378 <= p_n_assign_fu_38[32'd1];
    end
end

always @ (*) begin
    if (((icmp_ln990_reg_360 == 1'd1) & (1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        agg_result_0_0_i_out_ap_vld = 1'b1;
    end else begin
        agg_result_0_0_i_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln990_reg_360 == 1'd1) & (1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        agg_result_1_0_i_out_ap_vld = 1'b1;
    end else begin
        agg_result_1_0_i_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln990_reg_360 == 1'd1) & (1'b0 == ap_block_pp0_stage17_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        ap_condition_exit_pp0_iter0_stage17 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage17 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage17_subdone) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage17_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_110_p0 = mul_ac_i3_i1_i_reg_416;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_110_p0 = mul_ac_i_i1_i_reg_386;
    end else begin
        grp_fu_110_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_110_p1 = mul_bd_i4_i1_i_reg_421;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_110_p1 = mul_bd_i_i1_i_reg_391;
    end else begin
        grp_fu_110_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_114_p0 = mul_ad_i5_i1_i_reg_426;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_114_p0 = mul_ad_i_i1_i_reg_396;
    end else begin
        grp_fu_114_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_114_p1 = mul_bc_i6_i1_i_reg_431;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_114_p1 = mul_ad_i_i1_i_reg_396;
    end else begin
        grp_fu_114_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_118_p0 = p_y_M_value_fu_50;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_118_p0 = p_t_2_fu_46;
    end else begin
        grp_fu_118_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_118_p1 = reg_134;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_118_p1 = p_t_2_fu_46;
    end else begin
        grp_fu_118_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_122_p0 = p_y_M_value_9_fu_54;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_122_p0 = p_t_fu_42;
    end else begin
        grp_fu_122_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_122_p1 = reg_140;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_122_p1 = p_t_fu_42;
    end else begin
        grp_fu_122_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_126_p0 = p_y_M_value_fu_50;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_126_p0 = p_t_2_fu_46;
    end else begin
        grp_fu_126_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_126_p1 = reg_140;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_126_p1 = p_t_fu_42;
    end else begin
        grp_fu_126_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign agg_result_0_0_i_out = p_y_M_value_11_fu_62;

assign agg_result_1_0_i_out = p_y_M_value_10_fu_58;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage10_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage11_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage12_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage13_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage14_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage15_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage16_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage17_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage17;

assign grp_fu_467_p_ce = 1'b1;

assign grp_fu_467_p_din0 = grp_fu_110_p0;

assign grp_fu_467_p_din1 = grp_fu_110_p1;

assign grp_fu_467_p_opcode = 2'd1;

assign grp_fu_471_p_ce = 1'b1;

assign grp_fu_471_p_din0 = grp_fu_114_p0;

assign grp_fu_471_p_din1 = grp_fu_114_p1;

assign grp_fu_471_p_opcode = 2'd0;

assign grp_fu_475_p_ce = 1'b1;

assign grp_fu_475_p_din0 = grp_fu_118_p0;

assign grp_fu_475_p_din1 = grp_fu_118_p1;

assign grp_fu_479_p_ce = 1'b1;

assign grp_fu_479_p_din0 = grp_fu_122_p0;

assign grp_fu_479_p_din1 = grp_fu_122_p1;

assign grp_fu_483_p_ce = 1'b1;

assign grp_fu_483_p_din0 = grp_fu_126_p0;

assign grp_fu_483_p_din1 = grp_fu_126_p1;

assign grp_fu_487_p_ce = 1'b1;

assign grp_fu_487_p_din0 = p_y_M_value_9_fu_54;

assign grp_fu_487_p_din1 = reg_134;

assign icmp_ln990_fu_198_p2 = ((p_n_assign_1_fu_184_p4 == 11'd0) ? 1'b1 : 1'b0);

assign p_n_assign_1_fu_184_p4 = {{p_n_assign_fu_38[11:1]}};

assign p_y_M_value_12_fu_255_p3 = ((tmp_reg_378_pp0_iter1_reg[0:0] == 1'b1) ? reg_134 : p_y_M_value_11_fu_62);

assign p_y_M_value_13_fu_262_p3 = ((tmp_reg_378_pp0_iter1_reg[0:0] == 1'b1) ? reg_140 : p_y_M_value_10_fu_58);

assign p_y_M_value_14_fu_269_p3 = ((tmp_reg_378_pp0_iter1_reg[0:0] == 1'b1) ? reg_140 : p_y_M_value_9_load_reg_409);

assign p_y_M_value_15_fu_275_p3 = ((tmp_reg_378_pp0_iter1_reg[0:0] == 1'b1) ? reg_134 : p_y_M_value_load_reg_402);

assign zext_ln990_fu_194_p1 = p_n_assign_1_fu_184_p4;

endmodule //FFT_IP_transform_Pipeline_5
