// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module FFT_IP_transform_Pipeline_VITIS_LOOP_63_2_VITIS_LOOP_65_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        f_0_address0,
        f_0_ce0,
        f_0_we0,
        f_0_d0,
        f_0_q0,
        f_0_address1,
        f_0_ce1,
        f_0_q1,
        f_1_address0,
        f_1_ce0,
        f_1_we0,
        f_1_d0,
        f_1_q0,
        f_1_address1,
        f_1_ce1,
        f_1_q1,
        W_M_value_address0,
        W_M_value_ce0,
        W_M_value_q0,
        W_M_value_1_address0,
        W_M_value_1_ce0,
        W_M_value_1_q0,
        grp_fu_467_p_din0,
        grp_fu_467_p_din1,
        grp_fu_467_p_opcode,
        grp_fu_467_p_dout0,
        grp_fu_467_p_ce,
        grp_fu_471_p_din0,
        grp_fu_471_p_din1,
        grp_fu_471_p_opcode,
        grp_fu_471_p_dout0,
        grp_fu_471_p_ce,
        grp_fu_475_p_din0,
        grp_fu_475_p_din1,
        grp_fu_475_p_dout0,
        grp_fu_475_p_ce,
        grp_fu_479_p_din0,
        grp_fu_479_p_din1,
        grp_fu_479_p_dout0,
        grp_fu_479_p_ce,
        grp_fu_483_p_din0,
        grp_fu_483_p_din1,
        grp_fu_483_p_dout0,
        grp_fu_483_p_ce,
        grp_fu_487_p_din0,
        grp_fu_487_p_din1,
        grp_fu_487_p_dout0,
        grp_fu_487_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 31'd1;
parameter    ap_ST_fsm_pp0_stage1 = 31'd2;
parameter    ap_ST_fsm_pp0_stage2 = 31'd4;
parameter    ap_ST_fsm_pp0_stage3 = 31'd8;
parameter    ap_ST_fsm_pp0_stage4 = 31'd16;
parameter    ap_ST_fsm_pp0_stage5 = 31'd32;
parameter    ap_ST_fsm_pp0_stage6 = 31'd64;
parameter    ap_ST_fsm_pp0_stage7 = 31'd128;
parameter    ap_ST_fsm_pp0_stage8 = 31'd256;
parameter    ap_ST_fsm_pp0_stage9 = 31'd512;
parameter    ap_ST_fsm_pp0_stage10 = 31'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 31'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 31'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 31'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 31'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 31'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 31'd65536;
parameter    ap_ST_fsm_pp0_stage17 = 31'd131072;
parameter    ap_ST_fsm_pp0_stage18 = 31'd262144;
parameter    ap_ST_fsm_pp0_stage19 = 31'd524288;
parameter    ap_ST_fsm_pp0_stage20 = 31'd1048576;
parameter    ap_ST_fsm_pp0_stage21 = 31'd2097152;
parameter    ap_ST_fsm_pp0_stage22 = 31'd4194304;
parameter    ap_ST_fsm_pp0_stage23 = 31'd8388608;
parameter    ap_ST_fsm_pp0_stage24 = 31'd16777216;
parameter    ap_ST_fsm_pp0_stage25 = 31'd33554432;
parameter    ap_ST_fsm_pp0_stage26 = 31'd67108864;
parameter    ap_ST_fsm_pp0_stage27 = 31'd134217728;
parameter    ap_ST_fsm_pp0_stage28 = 31'd268435456;
parameter    ap_ST_fsm_pp0_stage29 = 31'd536870912;
parameter    ap_ST_fsm_pp0_stage30 = 31'd1073741824;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [12:0] f_0_address0;
output   f_0_ce0;
output   f_0_we0;
output  [31:0] f_0_d0;
input  [31:0] f_0_q0;
output  [12:0] f_0_address1;
output   f_0_ce1;
input  [31:0] f_0_q1;
output  [12:0] f_1_address0;
output   f_1_ce0;
output   f_1_we0;
output  [31:0] f_1_d0;
input  [31:0] f_1_q0;
output  [12:0] f_1_address1;
output   f_1_ce1;
input  [31:0] f_1_q1;
output  [12:0] W_M_value_address0;
output   W_M_value_ce0;
input  [31:0] W_M_value_q0;
output  [12:0] W_M_value_1_address0;
output   W_M_value_1_ce0;
input  [31:0] W_M_value_1_q0;
output  [31:0] grp_fu_467_p_din0;
output  [31:0] grp_fu_467_p_din1;
output  [1:0] grp_fu_467_p_opcode;
input  [31:0] grp_fu_467_p_dout0;
output   grp_fu_467_p_ce;
output  [31:0] grp_fu_471_p_din0;
output  [31:0] grp_fu_471_p_din1;
output  [1:0] grp_fu_471_p_opcode;
input  [31:0] grp_fu_471_p_dout0;
output   grp_fu_471_p_ce;
output  [31:0] grp_fu_475_p_din0;
output  [31:0] grp_fu_475_p_din1;
input  [31:0] grp_fu_475_p_dout0;
output   grp_fu_475_p_ce;
output  [31:0] grp_fu_479_p_din0;
output  [31:0] grp_fu_479_p_din1;
input  [31:0] grp_fu_479_p_dout0;
output   grp_fu_479_p_ce;
output  [31:0] grp_fu_483_p_din0;
output  [31:0] grp_fu_483_p_din1;
input  [31:0] grp_fu_483_p_dout0;
output   grp_fu_483_p_ce;
output  [31:0] grp_fu_487_p_din0;
output  [31:0] grp_fu_487_p_din1;
input  [31:0] grp_fu_487_p_dout0;
output   grp_fu_487_p_ce;

reg ap_idle;
reg[12:0] f_0_address0;
reg f_0_ce0;
reg f_0_we0;
reg[31:0] f_0_d0;
reg f_0_ce1;
reg[12:0] f_1_address0;
reg f_1_ce0;
reg f_1_we0;
reg[31:0] f_1_d0;
reg f_1_ce1;
reg W_M_value_ce0;
reg W_M_value_1_ce0;

(* fsm_encoding = "none" *) reg   [30:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage30;
wire    ap_block_state31_pp0_stage30_iter0;
wire    ap_block_state62_pp0_stage30_iter1;
wire    ap_block_pp0_stage30_subdone;
reg   [0:0] icmp_ln63_reg_444;
reg    ap_condition_exit_pp0_iter0_stage30;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [31:0] reg_168;
wire    ap_CS_fsm_pp0_stage29;
wire    ap_block_state30_pp0_stage29_iter0;
wire    ap_block_state61_pp0_stage29_iter1;
wire    ap_block_pp0_stage29_11001;
reg   [0:0] icmp_ln67_reg_499;
reg   [0:0] icmp_ln67_reg_499_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_state41_pp0_stage9_iter1;
wire    ap_block_state72_pp0_stage9_iter2;
wire    ap_block_pp0_stage9_11001;
reg   [0:0] icmp_ln67_reg_499_pp0_iter2_reg;
reg   [31:0] reg_174;
reg  signed [31:0] a_2_reg_425;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state33_pp0_stage1_iter1;
wire    ap_block_state64_pp0_stage1_iter2;
wire    ap_block_pp0_stage1_11001;
reg  signed [31:0] n_1_reg_431;
wire  signed [31:0] a_3_fu_257_p3;
reg  signed [31:0] a_3_reg_438;
wire   [0:0] icmp_ln63_fu_265_p2;
reg   [0:0] icmp_ln63_reg_444_pp0_iter1_reg;
wire   [16:0] add_ln63_fu_271_p2;
reg   [16:0] add_ln63_reg_448;
reg   [13:0] i_load_reg_453;
wire   [0:0] icmp_ln65_fu_280_p2;
reg   [0:0] icmp_ln65_reg_458;
wire  signed [31:0] n_2_fu_292_p2;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state34_pp0_stage2_iter1;
wire    ap_block_state65_pp0_stage2_iter2;
wire    ap_block_pp0_stage2_11001;
wire   [13:0] select_ln63_fu_297_p3;
reg   [13:0] select_ln63_reg_471;
reg   [13:0] select_ln63_reg_471_pp0_iter1_reg;
wire   [31:0] select_ln63_1_fu_303_p3;
reg   [31:0] select_ln63_1_reg_477;
wire   [12:0] trunc_ln63_fu_309_p1;
reg   [12:0] trunc_ln63_reg_482;
wire  signed [31:0] select_ln63_3_fu_318_p3;
reg  signed [31:0] select_ln63_3_reg_487;
wire   [12:0] empty_30_fu_323_p1;
reg   [12:0] empty_30_reg_493;
wire   [0:0] icmp_ln67_fu_333_p2;
wire   [31:0] grp_fu_286_p2;
reg   [31:0] mul222_reg_503;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state35_pp0_stage3_iter1;
wire    ap_block_state66_pp0_stage3_iter2;
wire    ap_block_pp0_stage3_11001;
wire   [12:0] add_ln70_fu_347_p2;
reg   [12:0] add_ln70_reg_513;
reg   [12:0] add_ln70_reg_513_pp0_iter1_reg;
wire   [31:0] grp_fu_313_p2;
reg   [31:0] mul22_mid1_reg_518;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state36_pp0_stage4_iter1;
wire    ap_block_state67_pp0_stage4_iter2;
wire    ap_block_pp0_stage4_11001;
wire   [31:0] select_ln63_2_fu_363_p3;
reg   [31:0] select_ln63_2_reg_523;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state37_pp0_stage5_iter1;
wire    ap_block_state68_pp0_stage5_iter2;
wire    ap_block_pp0_stage5_11001;
wire   [31:0] grp_fu_342_p2;
reg   [31:0] mul_ln70_reg_528;
wire   [31:0] grp_fu_368_p2;
reg   [31:0] srem_ln70_reg_533;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_state42_pp0_stage10_iter1;
wire    ap_block_state73_pp0_stage10_iter2;
wire    ap_block_pp0_stage10_11001;
reg   [12:0] f_0_addr_reg_538;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_state43_pp0_stage11_iter1;
wire    ap_block_pp0_stage11_11001;
reg   [12:0] f_1_addr_reg_544;
reg   [12:0] p_y_M_value_reg_560;
reg   [12:0] p_y_M_value_2_reg_565;
reg   [31:0] temp_M_value_reg_570;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_state44_pp0_stage12_iter1;
wire    ap_block_pp0_stage12_11001;
reg   [31:0] temp_M_value_2_reg_575;
reg   [31:0] p_r_M_value_reg_580;
reg   [31:0] p_r_M_value_6_reg_586;
reg   [31:0] p_t_reg_592;
reg   [31:0] p_t_1_reg_598;
reg   [31:0] mul_ac_i_i_reg_604;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_state20_pp0_stage19_iter0;
wire    ap_block_state51_pp0_stage19_iter1;
wire    ap_block_pp0_stage19_11001;
reg   [31:0] mul_bd_i_i_reg_609;
reg   [31:0] mul_ad_i_i_reg_614;
reg   [31:0] mul_bc_i_i_reg_619;
reg   [31:0] p_r_M_value_2_reg_624;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_state40_pp0_stage8_iter1;
wire    ap_block_state71_pp0_stage8_iter2;
wire    ap_block_pp0_stage8_11001;
reg   [31:0] p_r_M_value_3_reg_629;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage10_subdone;
wire   [63:0] i_1_cast15_fu_382_p1;
wire    ap_block_pp0_stage11;
wire   [63:0] zext_ln70_fu_387_p1;
wire   [63:0] zext_ln70_1_fu_392_p1;
reg   [13:0] i_fu_52;
wire   [13:0] add_ln65_fu_372_p2;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state32_pp0_stage0_iter1;
wire    ap_block_state63_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
wire    ap_loop_init;
wire    ap_block_pp0_stage1;
reg  signed [31:0] a_fu_56;
reg  signed [31:0] n_fu_60;
reg   [16:0] indvar_flatten_fu_64;
wire    ap_block_pp0_stage9;
wire    ap_block_pp0_stage10;
wire    ap_block_pp0_stage0;
reg   [31:0] grp_fu_144_p0;
reg   [31:0] grp_fu_144_p1;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_pp0_stage20;
wire    ap_block_pp0_stage30;
reg   [31:0] grp_fu_148_p0;
reg   [31:0] grp_fu_148_p1;
wire    ap_block_pp0_stage13;
wire  signed [31:0] tmp_fu_209_p1;
wire  signed [31:0] sub_ln76_fu_217_p1;
wire   [31:0] sub_ln76_fu_217_p2;
wire   [30:0] lshr_ln76_1_dup_fu_223_p4;
wire   [31:0] zext_ln76_fu_233_p1;
wire  signed [31:0] lshr_ln76_2_dup_fu_243_p1;
wire   [30:0] lshr_ln76_2_dup_fu_243_p4;
wire   [0:0] tmp_fu_209_p3;
wire   [31:0] sub_ln76_1_fu_237_p2;
wire   [31:0] zext_ln76_1_fu_253_p1;
wire    ap_block_pp0_stage2;
wire   [12:0] and_ln67_fu_327_p2;
wire    ap_block_pp0_stage3;
wire   [12:0] grp_fu_342_p0;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
reg   [1:0] grp_fu_144_opcode;
wire    ap_block_pp0_stage30_00001;
wire    ap_block_state21_pp0_stage20_iter0;
wire    ap_block_state52_pp0_stage20_iter1;
wire    ap_block_pp0_stage20_00001;
wire    ap_block_pp0_stage0_00001;
reg   [1:0] grp_fu_148_opcode;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
wire    ap_block_pp0_stage30_11001;
reg    ap_condition_exit_pp0_iter1_stage10;
reg    ap_idle_pp0_0to0;
reg   [30:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to2;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state38_pp0_stage6_iter1;
wire    ap_block_state69_pp0_stage6_iter2;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state39_pp0_stage7_iter1;
wire    ap_block_state70_pp0_stage7_iter2;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_state14_pp0_stage13_iter0;
wire    ap_block_state45_pp0_stage13_iter1;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_state15_pp0_stage14_iter0;
wire    ap_block_state46_pp0_stage14_iter1;
wire    ap_block_pp0_stage14_subdone;
wire    ap_block_state16_pp0_stage15_iter0;
wire    ap_block_state47_pp0_stage15_iter1;
wire    ap_block_pp0_stage15_subdone;
wire    ap_block_state17_pp0_stage16_iter0;
wire    ap_block_state48_pp0_stage16_iter1;
wire    ap_block_pp0_stage16_subdone;
wire    ap_block_state18_pp0_stage17_iter0;
wire    ap_block_state49_pp0_stage17_iter1;
wire    ap_block_pp0_stage17_subdone;
wire    ap_block_state19_pp0_stage18_iter0;
wire    ap_block_state50_pp0_stage18_iter1;
wire    ap_block_pp0_stage18_subdone;
wire    ap_block_pp0_stage19_subdone;
wire    ap_block_pp0_stage20_subdone;
wire    ap_block_state22_pp0_stage21_iter0;
wire    ap_block_state53_pp0_stage21_iter1;
wire    ap_block_pp0_stage21_subdone;
wire    ap_block_state23_pp0_stage22_iter0;
wire    ap_block_state54_pp0_stage22_iter1;
wire    ap_block_pp0_stage22_subdone;
wire    ap_block_state24_pp0_stage23_iter0;
wire    ap_block_state55_pp0_stage23_iter1;
wire    ap_block_pp0_stage23_subdone;
wire    ap_block_state25_pp0_stage24_iter0;
wire    ap_block_state56_pp0_stage24_iter1;
wire    ap_block_pp0_stage24_subdone;
wire    ap_block_state26_pp0_stage25_iter0;
wire    ap_block_state57_pp0_stage25_iter1;
wire    ap_block_pp0_stage25_subdone;
wire    ap_block_state27_pp0_stage26_iter0;
wire    ap_block_state58_pp0_stage26_iter1;
wire    ap_block_pp0_stage26_subdone;
wire    ap_block_state28_pp0_stage27_iter0;
wire    ap_block_state59_pp0_stage27_iter1;
wire    ap_block_pp0_stage27_subdone;
wire    ap_block_state29_pp0_stage28_iter0;
wire    ap_block_state60_pp0_stage28_iter1;
wire    ap_block_pp0_stage28_subdone;
wire    ap_block_pp0_stage29_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [31:0] grp_fu_342_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 31'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

FFT_IP_mul_32s_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_3_1_U74(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_fu_56),
    .din1(n_fu_60),
    .ce(1'b1),
    .dout(grp_fu_286_p2)
);

FFT_IP_mul_32s_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_3_1_U75(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_3_reg_438),
    .din1(n_2_fu_292_p2),
    .ce(1'b1),
    .dout(grp_fu_313_p2)
);

FFT_IP_mul_13ns_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_13ns_32s_32_3_1_U76(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_342_p0),
    .din1(select_ln63_3_reg_487),
    .ce(1'b1),
    .dout(grp_fu_342_p2)
);

FFT_IP_srem_32ns_32ns_32_36_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
srem_32ns_32ns_32_36_1_U77(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_ln70_reg_528),
    .din1(select_ln63_2_reg_523),
    .ce(1'b1),
    .dout(grp_fu_368_p2)
);

FFT_IP_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage30),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage10_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage30)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage30_subdone) & (1'b1 == ap_CS_fsm_pp0_stage30))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage10_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage30_subdone) & (1'b1 == ap_CS_fsm_pp0_stage30))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_fu_56 <= 32'd4096;
    end else if (((icmp_ln63_reg_444 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        a_fu_56 <= select_ln63_3_reg_487;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage10))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage30_11001) & (1'b1 == ap_CS_fsm_pp0_stage30))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_52 <= 14'd0;
        end else if (((icmp_ln63_reg_444 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_fu_52 <= add_ln65_fu_372_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_fu_64 <= 17'd0;
    end else if (((icmp_ln63_reg_444 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        indvar_flatten_fu_64 <= add_ln63_reg_448;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        n_fu_60 <= 32'd1;
    end else if (((icmp_ln63_reg_444 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        n_fu_60 <= select_ln63_1_reg_477;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        a_2_reg_425 <= a_fu_56;
        a_3_reg_438 <= a_3_fu_257_p3;
        add_ln63_reg_448 <= add_ln63_fu_271_p2;
        icmp_ln63_reg_444 <= icmp_ln63_fu_265_p2;
        icmp_ln63_reg_444_pp0_iter1_reg <= icmp_ln63_reg_444;
        n_1_reg_431 <= n_fu_60;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln63_reg_444 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln67_reg_499 == 1'd1))) begin
        add_ln70_reg_513 <= add_ln70_fu_347_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add_ln70_reg_513_pp0_iter1_reg <= add_ln70_reg_513;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln63_reg_444 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        empty_30_reg_493 <= empty_30_fu_323_p1;
        icmp_ln67_reg_499 <= icmp_ln67_fu_333_p2;
        select_ln63_1_reg_477 <= select_ln63_1_fu_303_p3;
        select_ln63_3_reg_487 <= select_ln63_3_fu_318_p3;
        select_ln63_reg_471 <= select_ln63_fu_297_p3;
        trunc_ln63_reg_482 <= trunc_ln63_fu_309_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (icmp_ln67_reg_499_pp0_iter1_reg == 1'd1))) begin
        f_0_addr_reg_538 <= i_1_cast15_fu_382_p1;
        f_1_addr_reg_544 <= i_1_cast15_fu_382_p1;
        p_y_M_value_2_reg_565 <= zext_ln70_1_fu_392_p1;
        p_y_M_value_reg_560 <= zext_ln70_1_fu_392_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln63_fu_265_p2 == 1'd0))) begin
        i_load_reg_453 <= i_fu_52;
        icmp_ln65_reg_458 <= icmp_ln65_fu_280_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        icmp_ln67_reg_499_pp0_iter1_reg <= icmp_ln67_reg_499;
        icmp_ln67_reg_499_pp0_iter2_reg <= icmp_ln67_reg_499_pp0_iter1_reg;
        select_ln63_reg_471_pp0_iter1_reg <= select_ln63_reg_471;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln63_reg_444 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul222_reg_503 <= grp_fu_286_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln63_reg_444 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln65_reg_458 == 1'd1))) begin
        mul22_mid1_reg_518 <= grp_fu_313_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19) & (icmp_ln67_reg_499_pp0_iter1_reg == 1'd1))) begin
        mul_ac_i_i_reg_604 <= grp_fu_475_p_dout0;
        mul_ad_i_i_reg_614 <= grp_fu_483_p_dout0;
        mul_bc_i_i_reg_619 <= grp_fu_487_p_dout0;
        mul_bd_i_i_reg_609 <= grp_fu_479_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln63_reg_444 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln67_reg_499 == 1'd1))) begin
        mul_ln70_reg_528 <= grp_fu_342_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (icmp_ln67_reg_499_pp0_iter2_reg == 1'd1))) begin
        p_r_M_value_2_reg_624 <= grp_fu_467_p_dout0;
        p_r_M_value_3_reg_629 <= grp_fu_471_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (icmp_ln67_reg_499_pp0_iter1_reg == 1'd1))) begin
        p_r_M_value_6_reg_586 <= W_M_value_1_q0;
        p_r_M_value_reg_580 <= W_M_value_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (icmp_ln67_reg_499_pp0_iter1_reg == 1'd1))) begin
        p_t_1_reg_598 <= f_1_q0;
        p_t_reg_592 <= f_0_q0;
        temp_M_value_2_reg_575 <= f_1_q1;
        temp_M_value_reg_570 <= f_0_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (icmp_ln67_reg_499_pp0_iter2_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage29_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29) & (icmp_ln67_reg_499_pp0_iter1_reg == 1'd1)))) begin
        reg_168 <= grp_fu_467_p_dout0;
        reg_174 <= grp_fu_471_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln63_reg_444 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        select_ln63_2_reg_523 <= select_ln63_2_fu_363_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (icmp_ln67_reg_499_pp0_iter1_reg == 1'd1))) begin
        srem_ln70_reg_533 <= grp_fu_368_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        W_M_value_1_ce0 = 1'b1;
    end else begin
        W_M_value_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        W_M_value_ce0 = 1'b1;
    end else begin
        W_M_value_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln63_reg_444 == 1'd1) & (1'b0 == ap_block_pp0_stage30_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30))) begin
        ap_condition_exit_pp0_iter0_stage30 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage30 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage10_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (icmp_ln63_reg_444_pp0_iter1_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter1_stage10 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage10_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to2 = 1'b1;
    end else begin
        ap_idle_pp0_1to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage30_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        f_0_address0 = p_y_M_value_reg_560;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        f_0_address0 = f_0_addr_reg_538;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        f_0_address0 = zext_ln70_1_fu_392_p1;
    end else begin
        f_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)))) begin
        f_0_ce0 = 1'b1;
    end else begin
        f_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        f_0_ce1 = 1'b1;
    end else begin
        f_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            f_0_d0 = reg_168;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            f_0_d0 = p_r_M_value_2_reg_624;
        end else begin
            f_0_d0 = 'bx;
        end
    end else begin
        f_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (icmp_ln67_reg_499_pp0_iter2_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (icmp_ln67_reg_499_pp0_iter2_reg == 1'd1)))) begin
        f_0_we0 = 1'b1;
    end else begin
        f_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        f_1_address0 = p_y_M_value_2_reg_565;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        f_1_address0 = f_1_addr_reg_544;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        f_1_address0 = zext_ln70_1_fu_392_p1;
    end else begin
        f_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)))) begin
        f_1_ce0 = 1'b1;
    end else begin
        f_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        f_1_ce1 = 1'b1;
    end else begin
        f_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            f_1_d0 = reg_174;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            f_1_d0 = p_r_M_value_3_reg_629;
        end else begin
            f_1_d0 = 'bx;
        end
    end else begin
        f_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (icmp_ln67_reg_499_pp0_iter2_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (icmp_ln67_reg_499_pp0_iter2_reg == 1'd1)))) begin
        f_1_we0 = 1'b1;
    end else begin
        f_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_00001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln67_reg_499_pp0_iter1_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage20_00001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (icmp_ln67_reg_499_pp0_iter1_reg == 1'd1)))) begin
        grp_fu_144_opcode = 2'd1;
    end else if (((1'b0 == ap_block_pp0_stage30_00001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30) & (icmp_ln67_reg_499_pp0_iter1_reg == 1'd1))) begin
        grp_fu_144_opcode = 2'd0;
    end else begin
        grp_fu_144_opcode = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage30) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_144_p0 = temp_M_value_reg_570;
    end else if (((1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        grp_fu_144_p0 = mul_ac_i_i_reg_604;
    end else begin
        grp_fu_144_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage30) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_144_p1 = reg_168;
    end else if (((1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        grp_fu_144_p1 = mul_bd_i_i_reg_609;
    end else begin
        grp_fu_144_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_00001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln67_reg_499_pp0_iter1_reg == 1'd1))) begin
        grp_fu_148_opcode = 2'd1;
    end else if ((((1'b0 == ap_block_pp0_stage20_00001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (icmp_ln67_reg_499_pp0_iter1_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage30_00001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30) & (icmp_ln67_reg_499_pp0_iter1_reg == 1'd1)))) begin
        grp_fu_148_opcode = 2'd0;
    end else begin
        grp_fu_148_opcode = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage30) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_148_p0 = temp_M_value_2_reg_575;
    end else if (((1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        grp_fu_148_p0 = mul_ad_i_i_reg_614;
    end else begin
        grp_fu_148_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage30) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_148_p1 = reg_174;
    end else if (((1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        grp_fu_148_p1 = mul_bc_i_i_reg_619;
    end else begin
        grp_fu_148_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to2 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if (((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage10))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((1'b0 == ap_block_pp0_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        ap_ST_fsm_pp0_stage26 : begin
            if ((1'b0 == ap_block_pp0_stage26_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end
        end
        ap_ST_fsm_pp0_stage27 : begin
            if ((1'b0 == ap_block_pp0_stage27_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end
        end
        ap_ST_fsm_pp0_stage28 : begin
            if ((1'b0 == ap_block_pp0_stage28_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end
        end
        ap_ST_fsm_pp0_stage29 : begin
            if ((1'b0 == ap_block_pp0_stage29_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end
        end
        ap_ST_fsm_pp0_stage30 : begin
            if ((1'b0 == ap_block_pp0_stage30_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign W_M_value_1_address0 = zext_ln70_fu_387_p1;

assign W_M_value_address0 = zext_ln70_fu_387_p1;

assign a_3_fu_257_p3 = ((tmp_fu_209_p3[0:0] == 1'b1) ? sub_ln76_1_fu_237_p2 : zext_ln76_1_fu_253_p1);

assign add_ln63_fu_271_p2 = (indvar_flatten_fu_64 + 17'd1);

assign add_ln65_fu_372_p2 = (select_ln63_reg_471 + 14'd1);

assign add_ln70_fu_347_p2 = (empty_30_reg_493 + trunc_ln63_reg_482);

assign and_ln67_fu_327_p2 = (trunc_ln63_fu_309_p1 & empty_30_fu_323_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage29 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage30 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage18_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage21_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage22_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage23_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage24_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage25_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage26_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage27_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage28_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage29_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage30_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage10_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage11_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage12_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage13_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage14_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage15_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage16_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage17_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage18_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage19_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage20_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage21_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage22_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage23_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage24_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage25_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage26_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage27_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage28_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage29_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage30_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage8_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage9_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage10_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage30;

assign empty_30_fu_323_p1 = select_ln63_fu_297_p3[12:0];

assign f_0_address1 = i_1_cast15_fu_382_p1;

assign f_1_address1 = i_1_cast15_fu_382_p1;

assign grp_fu_342_p0 = grp_fu_342_p00;

assign grp_fu_342_p00 = empty_30_reg_493;

assign grp_fu_467_p_ce = 1'b1;

assign grp_fu_467_p_din0 = grp_fu_144_p0;

assign grp_fu_467_p_din1 = grp_fu_144_p1;

assign grp_fu_467_p_opcode = grp_fu_144_opcode;

assign grp_fu_471_p_ce = 1'b1;

assign grp_fu_471_p_din0 = grp_fu_148_p0;

assign grp_fu_471_p_din1 = grp_fu_148_p1;

assign grp_fu_471_p_opcode = grp_fu_148_opcode;

assign grp_fu_475_p_ce = 1'b1;

assign grp_fu_475_p_din0 = p_r_M_value_reg_580;

assign grp_fu_475_p_din1 = p_t_reg_592;

assign grp_fu_479_p_ce = 1'b1;

assign grp_fu_479_p_din0 = p_r_M_value_6_reg_586;

assign grp_fu_479_p_din1 = p_t_1_reg_598;

assign grp_fu_483_p_ce = 1'b1;

assign grp_fu_483_p_din0 = p_r_M_value_reg_580;

assign grp_fu_483_p_din1 = p_t_1_reg_598;

assign grp_fu_487_p_ce = 1'b1;

assign grp_fu_487_p_din0 = p_r_M_value_6_reg_586;

assign grp_fu_487_p_din1 = p_t_reg_592;

assign i_1_cast15_fu_382_p1 = select_ln63_reg_471_pp0_iter1_reg;

assign icmp_ln63_fu_265_p2 = ((indvar_flatten_fu_64 == 17'd106496) ? 1'b1 : 1'b0);

assign icmp_ln65_fu_280_p2 = ((i_fu_52 == 14'd8192) ? 1'b1 : 1'b0);

assign icmp_ln67_fu_333_p2 = ((and_ln67_fu_327_p2 == 13'd0) ? 1'b1 : 1'b0);

assign lshr_ln76_1_dup_fu_223_p4 = {{sub_ln76_fu_217_p2[31:1]}};

assign lshr_ln76_2_dup_fu_243_p1 = a_fu_56;

assign lshr_ln76_2_dup_fu_243_p4 = {{lshr_ln76_2_dup_fu_243_p1[31:1]}};

assign n_2_fu_292_p2 = n_1_reg_431 << 32'd1;

assign select_ln63_1_fu_303_p3 = ((icmp_ln65_reg_458[0:0] == 1'b1) ? n_2_fu_292_p2 : n_1_reg_431);

assign select_ln63_2_fu_363_p3 = ((icmp_ln65_reg_458[0:0] == 1'b1) ? mul22_mid1_reg_518 : mul222_reg_503);

assign select_ln63_3_fu_318_p3 = ((icmp_ln65_reg_458[0:0] == 1'b1) ? a_3_reg_438 : a_2_reg_425);

assign select_ln63_fu_297_p3 = ((icmp_ln65_reg_458[0:0] == 1'b1) ? 14'd0 : i_load_reg_453);

assign sub_ln76_1_fu_237_p2 = (32'd0 - zext_ln76_fu_233_p1);

assign sub_ln76_fu_217_p1 = a_fu_56;

assign sub_ln76_fu_217_p2 = ($signed(32'd0) - $signed(sub_ln76_fu_217_p1));

assign tmp_fu_209_p1 = a_fu_56;

assign tmp_fu_209_p3 = tmp_fu_209_p1[32'd31];

assign trunc_ln63_fu_309_p1 = select_ln63_1_fu_303_p3[12:0];

assign zext_ln70_1_fu_392_p1 = add_ln70_reg_513_pp0_iter1_reg;

assign zext_ln70_fu_387_p1 = srem_ln70_reg_533;

assign zext_ln76_1_fu_253_p1 = lshr_ln76_2_dup_fu_243_p4;

assign zext_ln76_fu_233_p1 = lshr_ln76_1_dup_fu_223_p4;

endmodule //FFT_IP_transform_Pipeline_VITIS_LOOP_63_2_VITIS_LOOP_65_3
